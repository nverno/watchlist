{"version":3,"sources":["components/StandAlone.jsx","selectors/lists.js","actions/list_actions.js","util/settings.js","util/utils.js","util/av_api.js","util/iex_api.js","util/stocks_api.js","actions/search_actions.js","reducers/entities/lists_reducer.js","actions/stock_actions.js","reducers/entities_reducer.js","reducers/entities/search_reducer.js","reducers/entities/stock_quotes_reducer.js","reducers/errors_reducer.js","reducers/errors/search_errors_reducer.js","reducers/errors/api_errors_reducer.js","reducers/errors/list_errors_reducer.js","actions/settings_actions.js","reducers/settings_reducer.js","actions/current_symbol_actions.js","reducers/ui_reducer.js","reducers/ui/lists_reducer.js","reducers/root_reducer.js","reducers/current_symbol_reducer.js","store/store.js","components/search/Search.jsx","components/lists/modal/ListSelectModal.jsx","components/search/SearchMenu.jsx","components/lists/forms/EditListForm.jsx","components/lists/modal/EditListModal.jsx","components/lists/ListDropdown.jsx","selectors/util.js","selectors/quotes.js","components/lists/ListCell.jsx","components/lists/List.jsx","components/lists/forms/ListForm.jsx","components/lists/Lists.jsx","components/App.jsx","index.js","components/standalone.module.scss"],"names":["StandAlone","props","md","className","styles","body","style","margin","children","getList","name","lists","list","RECEIVE_LIST","REMOVE_LIST","RENAME_LIST","RECEIVE_LISTS","RECEIVE_OPEN_LIST","RECEIVE_CLOSE_LIST","RECEIVE_LIST_ERRORS","CLEAR_LIST_ERRORS","REMOVE_LIST_ITEM","removeListItem","item","type","clearListErrors","receiveListErrors","errors","closeList","openList","receiveLists","removeList","addToList","items","createList","renameList","oldName","newName","updateList","validateList","length","loadSettings","dispatch","saveSettings","settings","Object","entries","key","val","localStorage","setItem","JSON","stringify","console","log","splitByMatches","q","str","m","i","parts","re","RegExp","exec","index","push","match","value","slice","createUrl","params","apiKey","apikey","keys","map","join","sendRequest","a","url","fetch","res","ok","Error","status","json","data","cleanSearch","results","obj","fn","_","k","replace","reduce","acc","search","query","function","keywords","endpoint","token","encoded","fetchQuotes","symbols","types","formatSearchResults","partition","symbol","region","stocks","funds","fetchSearchResults","AvAPI","IexAPI","maybeFetchQuotes","quotes","syms","filter","RECEIVE_SEARCH_RESULTS","CLEAR_SEARCH_RESULTS","RECEIVE_SEARCH_ERRORS","receiveSearchErrors","clearSearchResults","receiveSearchResults","StocksAPI","then","catch","RECEIVE_BATCH_QUOTES","RECEIVE_API_ERRORS","CLEAR_API_ERRORS","clearApiErrors","receiveApiErrors","receiveBatchQuotes","combineReducers","searchResults","state","action","freeze","old","toUpperCase","Set","concat","ele","ns","assign","message","api","RECEIVE_API_KEYS","_defaultState","RECEIVE_CURRENT_SYMBOL","CLEAR_CURRENT_SYMBOL","ui","entities","merge","current","middlewares","thunk","configureStore","preloadedState","store","createStore","rootReducer","applyMiddleware","connect","_ownProps","avKey","React","useState","setQuery","id","onSubmit","e","preventDefault","placeholder","onChange","currentTarget","autoFocus","ListItem","isMember","some","listContains","onClick","size","color","ownProps","modal","setModal","toggle","Modal","isOpen","onClosed","ModalHeader","ModalBody","idx","SearchMenuItem","addable","role","part","SearchMenuSection","result","SearchMenuErrors","error","setCurrent","clearCurrent","menu","setEditing","validate","listName","setListName","open","ListDropdown","toggleEdit","setOpen","editModal","setEditModal","ButtonDropdown","direction","DropdownToggle","data-toggle","DropdownMenu","right","DropdownItem","fmt","require","n","toFixed","toLocaleString","fmtPrice","price","Math","abs","fmtPercent","quotePercent","quote","field","quotePrice","latestPrice","PercentChange","cname","changePercent","quoteClass","height","SortableItem","SortableElement","SortableList","SortableContainer","Boolean","handle","useEffect","editing","warn","caret","Fragment","onSortEnd","oldIndex","newIndex","arrayMove","ListForm","cancel","setName","handleSubmit","DragHandle","SortableHandle","updateLists","newList","formOpen","setFormOpen","useDragHandle","Wrapper","default","App","panel","Row","Container","fluid","document","addEventListener","parse","getItem","root","getElementById","ReactDOM","render","StrictMode","getElementsByTagName","window","module","exports"],"mappings":"mPAsBeA,UAlBI,SAACC,GAClB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKC,GAAI,EAAGC,UAAWC,IAAOC,KAA9B,SACE,sBAAKC,MAAO,CAAEC,OAAQ,UAAtB,UACE,gFACA,uBACA,2FAGJ,cAAC,IAAD,CAAKL,GAAI,EAAT,SAEGD,EAAMO,gB,s4DChBFC,EAAU,SAACC,EAAMC,GAAW,IAAD,gBACnBA,GADmB,IACtC,2BAA0B,CAAC,IAAhBC,EAAe,QACxB,GAAIA,EAAKF,OAASA,EAAM,OAAOE,GAFK,8BAItC,OAAO,MCFIC,EAAe,eACfC,EAAc,cACdC,EAAc,cACdC,EAAgB,gBAChBC,EAAoB,oBACpBC,EAAqB,qBACrBC,EAAsB,sBACtBC,EAAoB,oBACpBC,EAAmB,mBAEnBC,EAAiB,SAACV,EAAMW,GAAP,MAAiB,CAC7CC,KAAMH,EACNT,OACAW,SAGWE,EAAkB,iBAAO,CACpCD,KAAMJ,IAGKM,EAAoB,SAACC,GAAD,MAAa,CAC5CH,KAAML,EACNQ,WAGWC,EAAY,SAAClB,GAAD,MAAW,CAClCc,KAAMN,EACNR,SAGWmB,EAAW,SAACnB,GAAD,MAAW,CACjCc,KAAMP,EACNP,SAGWoB,EAAe,SAACnB,GAAD,MAAY,CACtCa,KAAMR,EACNL,UAGWoB,EAAa,SAACrB,GAAD,MAAW,CACnCc,KAAMV,EACNJ,SAGWsB,EAAY,SAAC,EAAUC,GAAX,IAAGvB,EAAH,EAAGA,KAAH,MAAsB,CAC7Cc,KAAMX,EACND,KAAM,CACJF,OACAuB,WAISC,EAAa,SAACxB,GAAD,MAAW,CACnCc,KAAMX,EACND,KAAM,CACJF,OACAuB,MAAO,MAIEE,EAAa,SAACC,EAASC,GAAV,MAAuB,CAC/Cb,KAAMT,EACNsB,UACAD,YAGWE,EAAa,SAAC1B,GAAD,MAAW,CACnCY,KAAMX,EACND,SAGW2B,EAAe,SAAC7B,EAAMC,GACjC,OAAKD,EAAK8B,OAEC/B,EAAQC,EAAMC,GAChB,CAAC,GAAD,OAAID,EAAJ,qBAEF,GAJE,CAAC,kBCvEC+B,EAAe,kBAAM,SAACC,GASjC,OAAO,IAIIC,EAAe,SAACC,GAMzB,cAAyBC,OAAOC,QAAQF,GAAxC,eAAmD,CAAC,IAAD,sBAAvCG,EAAuC,KAAlCC,EAAkC,KACjDC,aAAaC,QAAQH,EAAKI,KAAKC,UAAUJ,IAE3CK,QAAQC,IAAI,mC,yCCpBHC,EAAiB,SAACC,EAAGC,GAChC,GAAiB,IAAbD,EAAEhB,OAAc,MAAO,GAM3B,IALA,IAAIkB,EACFC,EAAI,EACJC,EAAQ,GACJC,EAAK,IAAIC,OAAON,EAAG,OAEjBE,EAAIG,EAAGE,KAAKN,KAASE,EAAIF,EAAIjB,QACnCkB,EAAEM,MAAQ,GACRJ,EAAMK,KAAK,CACTC,OAAO,EACPC,MAAOV,EAAIW,MAAMT,EAAGD,EAAEM,SAE1BJ,EAAMK,KAAK,CACTC,OAAO,EACPC,MAAOV,EAAIW,MAAMV,EAAEM,MAAON,EAAEM,MAAQR,EAAEhB,UAExCmB,EAAID,EAAEM,MAAQR,EAAEhB,OASlB,OANAmB,EAAIF,EAAIjB,QACNoB,EAAMK,KAAK,CACTC,OAAO,EACPC,MAAOV,EAAIW,MAAMT,KAGdC,GCzBHS,EAAY,SAACC,EAAQC,GAKzB,OAJAD,EAAOE,OAASD,EAHD,qCAIC1B,OAAO4B,KAAKH,GACzBI,KAAI,SAAC3B,GAAD,gBAAYA,EAAZ,YAAmBuB,EAAOvB,OAC9B4B,KAAK,MAIJC,EAAW,uCAAG,WAAON,EAAQC,GAAf,mBAAAM,EAAA,6DACZC,EAAMT,EAAUC,EAAQC,GAC9BlB,QAAQC,IAAI,QAASwB,GAFH,SAGAC,MAAMD,GAHN,WAGZE,EAHY,QAITC,GAJS,sBAIC,IAAIC,MAAJ,qBAAwBF,EAAIG,SAJ7B,uBAKCH,EAAII,OALL,UAOmB,qBAF/BC,EALY,QAOF,iBAPE,uBAQV,IAAIH,MAAMG,EAAK,kBARL,WASiB,qBAAjBA,EAAI,KATJ,uBAUV,IAAIH,MAAJ,8BAAiCG,EAAI,OAV3B,iCAaXA,GAbW,4CAAH,wDAmBXC,EAAc,SAACC,GACnB,OAAOA,EAAQb,KAAI,SAACM,GAAD,ODpCGQ,ECqCZR,EDrCiBS,ECqCZ,SAACC,EAAGC,GAAJ,OAAUA,EAAEvB,MAAM,GAAGwB,QAAQ,KAAM,MDpClD/C,OAAO4B,KAAKe,GAAKK,QAAO,SAACC,EAAKH,GAE5B,OADAG,EAAIL,EAAGD,EAAIG,GAAIA,EAAGH,IAAQA,EAAIG,GACvBG,IACN,IAJkB,IAACN,EAAKC,MCyChBM,EAAM,uCAAG,WAAOC,EAAOzB,GAAd,iBAAAM,EAAA,6DACdP,EAAS,CACb2B,SAAU,gBACVC,SAAUF,GAHQ,SAMJpB,EAAYN,EAAQC,GANhB,cAMhBS,EANgB,yBAObA,EAAG,YAAkBM,EAAYN,EAAG,aAAmB,IAP1C,2CAAH,wDClCbX,EAAY,SAAC8B,EAAU7B,EAAQC,GACnCD,EAAO8B,MAAQ7B,EACf,IAAM8B,EAAUxD,OAAO4B,KAAKH,GACzBI,KAAI,SAAC3B,GAAD,gBAAYA,EAAZ,YAAmBuB,EAAOvB,OAC9B4B,KAAK,KACR,MAAM,GAAN,OAPe,oCAOf,OAAqBwB,EAArB,YAAiCE,IAG7BzB,EAAW,uCAAG,WAAOuB,EAAU7B,EAAQC,GAAzB,mBAAAM,EAAA,6DACZC,EAAMT,EAAU8B,EAAU7B,EAAQC,GACxClB,QAAQC,IAAI,QAASwB,GAFH,SAGAC,MAAMD,GAHN,WAGZE,EAHY,QAITC,GAJS,sBAIC,IAAIC,MAAJ,qBAAwBF,EAAIG,SAJ7B,uBAKCH,EAAII,OALL,cAKZC,EALY,yBAaXA,GAbW,4CAAH,0DAiBJiB,EAAW,uCAAG,WAAOC,EAASjC,EAAQC,GAAxB,SAAAM,EAAA,+EAClBD,EACL,sBADgB,aAGd2B,QAASA,EAAQ5B,KAAK,KACtB6B,MAAO,SACJlC,GAELC,IARuB,2CAAH,0DCvBXkC,EAAsB,SAACT,EAAOT,GAAa,IAAD,EAC7BmB,oBACtBnB,EAAQb,KAAI,gBAAGiC,EAAH,EAAGA,OAAQjG,EAAX,EAAWA,KAAMc,EAAjB,EAAiBA,KAAMoF,EAAvB,EAAuBA,OAAvB,MAAqC,CAC/CzC,MAAOwC,EACPA,OAAQpD,EAAeyC,EAAOW,GAC9BjG,KAAM6C,EAAeyC,EAAOtF,GAC5Bc,OACAoF,aAEF,CAAC,OAAQ,WAT0C,mBAWrD,MAAO,CAAEC,OAX4C,KAWpCC,MAXoC,OAc1CC,EAAkB,uCAAG,WAAOf,GAAP,6BAAAnB,EAAA,6DAAcN,EAAd,+BAAuB,KAAvB,SACZyC,EAAahB,EAAOzB,GADR,cAC5BgB,EAD4B,yBAEzBkB,EAAoBT,EAAOT,IAFF,2CAAH,sDAQlBe,GAAcW,EAGdC,GAAgB,uCAAG,WAAOX,EAASY,EAAQ7C,EAAQC,GAAhC,eAAAM,EAAA,2DACxBuC,EAAOb,EAAQc,QAAO,SAACV,GAAD,OAAaQ,EAAOR,OACvCnE,OAFqB,yCAEN8D,GAAYc,EAAM9C,EAAQC,IAFpB,iCAGvB,GAHuB,2CAAH,4DChChB+C,GAAyB,yBACzBC,GAAuB,uBACvBC,GAAwB,wBAExBC,GAAsB,SAAC9F,GAAD,MAAa,CAC9CH,KAAMgG,GACN7F,WAGW+F,GAAqB,iBAAO,CACvClG,KAAM+F,KAGKI,GAAuB,SAACpC,GAAD,MAAc,CAChD/D,KAAM8F,GACN/B,YAGWwB,GAAqB,SAACf,EAAOzB,GAAR,OAAmB,SAAC7B,GACpD,OAAOkF,EAA6B5B,EAAOzB,GACxCsD,MAAK,SAACtC,GAAD,OAAa7C,EAASiF,GAAqBpC,OAChDuC,OAAM,SAACnG,GAAD,OAAYe,EAAS+E,GAAoB9F,S,SCb9CI,GAAa,SAACrB,EAAMC,GACxB,OAAOA,EAAM0G,QAAO,SAACzG,GAAD,OAAUA,EAAKF,OAASA,MCTjCqH,GAAuB,uBACvBC,GAAqB,qBACrBC,GAAmB,mBAEnBC,GAAiB,iBAAO,CACnC1G,KAAMyG,KAGKE,GAAmB,SAACxG,GAAD,MAAa,CAC3CH,KAAMwG,GACNrG,WAGWyG,GAAqB,SAAC/C,GAAD,MAAW,CAC3C7D,KAAMuG,GACN1C,SAGWiB,GAAc,SAACC,EAASjC,EAAQC,GAAlB,OAA6B,SAAC7B,GACvD,OAAOkF,GAAsBrB,EAASjC,EAAQC,GAC3CsD,MAAK,SAACtC,GAAD,OAAa7C,EAAS0F,GAAmB7C,OAC9CuC,OAAM,SAACnG,GAAD,OAAYe,EAASyF,GAAiBxG,SAGpCuF,GAAmB,SAACX,EAASY,EAAQ7C,EAAQC,GAA1B,OAAqC,SACnE7B,GAEA,OAAOkF,GAA2BrB,EAASY,EAAQ7C,EAAQC,GACxDsD,MAAK,SAACtC,GAAD,OAAaA,GAAW7C,EAAS0F,GAAmB7C,OACzDuC,OAAM,SAACnG,GAAD,OAAYe,EAASyF,GAAiBxG,SCzBlC0G,eAAgB,CAC7BC,cCFa,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAErC,OADA3F,OAAO4F,OAAOF,GACNC,EAAOhH,MACb,KAAK8F,GACH,OAAOkB,EAAOjD,QAEhB,KAAKgC,GACH,MAAO,GAET,QACE,OAAOgB,IDPX5H,MFMa,WAAyB,IAElCqE,EAAK0D,EAFKH,EAAuB,uDAAf,GAAIC,EAAW,uCAIrC,OAHA3F,OAAO4F,OAAOF,GAGNC,EAAOhH,MACb,KAAKR,EACH,OAAOwH,EAAO7H,MAEhB,KAAKE,EACHmE,EAAG,aAAOuD,GACV,IAAItG,EAAQuG,EAAO5H,KAAKqB,MAAMyC,KAAI,SAACnD,GAAD,OAAUA,EAAKoH,kBAC5CD,EAAMjI,EAAQ+H,EAAO5H,KAAKF,KAAM6H,KACnCtG,EAAK,aAAO,IAAI2G,IAAI3G,EAAM4G,OAAOH,EAAIzG,SACrCyG,EAAIzG,MAAQA,GAEZ+C,EAAIf,KAAK,CAAEvD,KAAM8H,EAAO5H,KAAKF,KAAMuB,UAErC,MAEF,KAAKZ,EACH2D,EAAG,aAAOuD,IACVG,EAAMjI,EAAQ+H,EAAO5H,KAAKF,KAAM6H,IAC5BtG,MAAQyG,EAAIzG,MAAMoF,QAAO,SAACyB,GAAD,OAASA,IAAQN,EAAOjH,QACrD,MAEF,KAAKT,EACHkE,EAAMjD,GAAWyG,EAAO9H,KAAM6H,GAC9B,MAEF,KAAKxH,EACHiE,EAAG,aAAOuD,GADZ,oBAEqBA,GAFrB,IAEE,2BAA0B,CAAC,IAAhB3H,EAAe,QACxB,GAAIA,EAAKF,OAAS8H,EAAOpG,QAAS,CAChCxB,EAAKF,KAAO8H,EAAOnG,QACnB,QALN,8BAQE,MAEF,QACE,OAAOkG,EAIX,OADA5F,EAAa,CAAEhC,MAAOqE,IACfA,GEjDPmC,OEPa,WAAyB,IAAxBoB,EAAuB,uDAAf,GAAIC,EAAW,uCAErC,OADA3F,OAAO4F,OAAOF,GACNC,EAAOhH,MACb,KAAKuG,GAEH,IADA,IAAIgB,EAAKlG,OAAOmG,OAAO,GAAIT,GAC3B,MAAyB1F,OAAOC,QAAQ0F,EAAOnD,MAA/C,eAAsD,CAAC,IAAD,sBAA1CtC,EAA0C,KAArCC,EAAqC,KACpD+F,EAAGhG,GAAOC,EAAG,MAEf,OAAO+F,EAET,QACE,OAAOR,MCPEF,eAAgB,CAC7BtC,OCDa,WAAyB,IAAxBwC,EAAuB,uDAAf,GAAIC,EAAW,uCAErC,OADA3F,OAAO4F,OAAOF,GACNC,EAAOhH,MACb,KAAKgG,GACH,MAAO,CAACgB,EAAO7G,OAAOsH,SAExB,KAAK3B,GACL,KAAKC,GACH,MAAO,GAET,QACE,OAAOgB,IDTXW,IEFa,WAAyB,IAAxBX,EAAuB,uDAAf,GAAIC,EAAW,uCAErC,OADA3F,OAAO4F,OAAOF,GACNC,EAAOhH,MACb,KAAKwG,GACH,MAAO,CAACQ,EAAO7G,OAAOsH,SAExB,KAAKhB,GACL,KAAKF,GACH,MAAO,GAET,QACE,OAAOQ,IFRX5H,MGHa,WAAyB,IAAxB4H,EAAuB,uDAAf,GAAIC,EAAW,uCAErC,OADA3F,OAAO4F,OAAOF,GACNC,EAAOhH,MACb,KAAKL,EACH,OAAOqH,EAAO7G,OAEhB,KAAKd,EACL,KAAKO,EACH,MAAO,GAET,QACE,OAAOmH,MCjBAY,GAAmB,mBCG1BC,GAAgB,CACpB3E,KAAM,ICJK4E,GAAyB,yBACzBC,GAAuB,uB,SCErBjB,eAAgB,CAC7B1H,MCEa,WAAyB,IAElCqE,EAFUuD,EAAuB,uDAAf,GAAIC,EAAW,uCAIrC,OAHA3F,OAAO4F,OAAOF,GAGNC,EAAOhH,MACb,KAAKP,EACH+D,EAAMnC,OAAOmG,OAAO,GAAIT,EAAlB1F,OAAA,KAAAA,CAAA,GAA4B2F,EAAO9H,MAAO,IAChD,MAEF,KAAKQ,SACH8D,EAAMnC,OAAOmG,OAAO,GAAIT,IACbC,EAAO9H,MAClB,MAEF,QACE,OAAO6H,EAIX,OADA5F,EAAa,CAAE4G,GAAI,CAAE5I,MAAOqE,KACrBA,KCjBMqD,eAAgB,CAC7BmB,YACA7H,UACAiB,SJJa,WAAoC,IAAnC2F,EAAkC,uDAA1Ba,GAAeZ,EAAW,uCAGhD,OAFA3F,OAAO4F,OAAOF,GAENC,EAAOhH,MACb,KAAK2H,GACH,IAAI1E,EAAO5B,OAAOmG,OAAO,GAAIT,EAAM9D,MACnC,OAAO5B,OAAOmG,OAAO,GAAIT,EAAOkB,gBAAMhF,EAAM+D,EAAO/D,OAErD,QACE,OAAO8D,IIJXmB,QCPa,WAA2B,IAA1BnB,EAAyB,uDAAjB,KAAMC,EAAW,uCAEvC,OADA3F,OAAO4F,OAAOF,GACNC,EAAOhH,MACb,KAAK6H,GACH,OAAOb,EAAO7B,OAEhB,KAAK2C,GACH,OAAO,KAET,QACE,OAAOf,IDFXgB,QETII,GAAc,C,MAACC,GAqBNC,GAdQ,WAA0B,IAAzBC,EAAwB,uDAAP,GACjCC,EAAQC,YACZC,GACAH,EAKII,IAAe,WAAf,EAAmBP,KAGzB,OAAOI,G,6BC6BMI,I,YAAAA,aAxCS,SAAC5B,EAAO6B,GAAR,MAAuB,CAC7CC,MAAO9B,EAAM3F,SAAS6B,KAAf,UAGkB,SAAC/B,EAAD,OAAa2H,EAAb,EAAaA,MAAb,MAA0B,CACnDtD,mBAAoB,SAACf,GAAD,OAAWtD,EAASqE,GAAmBf,EAAOqE,KAClE3C,mBAAoB,kBAAMhF,EAASgF,UAkCtByC,EA/BA,SAAC,GAAgD,IAA9CpD,EAA6C,EAA7CA,mBAAoBW,EAAyB,EAAzBA,mBAAyB,EACnC4C,IAAMC,SAAS,IADoB,mBACtDvE,EADsD,KAC/CwE,EAD+C,KAU7D,OACE,sBAAMC,GAAG,cAAcC,SARJ,SAACC,GACpBA,EAAEC,iBACE5E,EAAMxD,OAAQuE,EAAmBf,GAChC0B,IACL8C,EAAS,KAIT,SACE,uBACEhJ,KAAK,OACLrB,UAAU,eACV0K,YAAY,YACZ1G,MAAO6B,EACP8E,SAAU,SAACH,GAAD,OAAOH,EAASG,EAAEI,cAAc5G,QAC1C6G,WAAS,U,wDCXXC,I,MAAW,SAAC,GAOX,IANLrK,EAMI,EANJA,KACA+F,EAKI,EALJA,OACApC,EAII,EAJJA,OACA4C,EAGI,EAHJA,OACAnF,EAEI,EAFJA,UACAV,EACI,EADJA,eAEM4J,E1B5BoB,SAACtK,EAAM+F,GACjC,OAAO/F,EAAKqB,MAAMkJ,MAAK,SAAC5J,GAAD,OAAUA,IAASoF,K0B2BzByE,CAAaxK,EAAM+F,GAKpC,OACE,sBAAKxG,UAAU,kBAAkBkL,QALf,WACdH,EAAU5J,EAAeV,GACxBoB,EAAUpB,EAAMuG,EAAQ5C,IAG7B,UACE,+BAAO3D,EAAKF,OACZ,8BACGwK,GAAY,cAAC,KAAD,CAAaI,KAAM,GAAIC,MAAM,mCAsCnCpB,gBAtES,SAAC5B,EAAOiD,GAAR,MAAsB,CAC5C7K,MAAO4H,EAAMiB,SAAS7I,MACtB4D,OAAQgE,EAAM3F,SAAS6B,KAAf,IACR0C,OAAQoB,EAAMiB,SAASrC,WAGE,SAACzE,EAAD,OAAaiE,EAAb,EAAaA,OAAb,MAA2B,CACpD3E,UAAW,SAACpB,EAAMuG,EAAQ5C,GACxB7B,EAASV,EAAUpB,EAAM,CAAC+F,KAC1BjE,EAASwE,GAAiB,CAACP,GAASQ,EAAQ,GAAI5C,KAElDjD,eAAgB,SAACV,GAAD,OAAU8B,EAASpB,EAAeV,EAAM+F,KACxDe,mBAAoB,kBAAMhF,EAASgF,UA0DtByC,EAhCS,SAAC,GAAiC,IAA/BxD,EAA8B,EAA9BA,OAAQhG,EAAsB,EAAtBA,MAAUV,EAAY,qCAC7BqK,IAAMC,UAAS,GADc,mBAChDkB,EADgD,KACzCC,EADyC,KAEjDC,EAAS,kBAAMD,GAAUD,IAE/B,OACE,gCACE,wBAAQjK,KAAK,SAAS6J,QAASM,EAAQxL,UAAU,oBAAjD,SACE,cAAC,KAAD,CACEmL,KAAM,GACNC,MAAM,cACNpL,UAAU,sBAGd,eAACyL,GAAA,EAAD,CACEC,OAAQJ,EACRE,OAAQA,EACRxL,UAAU,aACV2L,SAAU,kBAAM7L,EAAMyH,sBAJxB,UAME,cAACqE,GAAA,EAAD,CACEJ,OAAQA,EADV,qCAEuBhF,KACvB,cAACqF,GAAA,EAAD,CAAW7L,UAAU,kBAArB,SACGQ,EAAM+D,KAAI,SAAC9D,EAAMqL,GAAP,OACT,cAAC,GAAD,aAAoBtF,OAAQA,EAAQ/F,KAAMA,GAAUX,GAArCgM,iBCnDrBC,GAAiB,SAAC,GAQjB,IAPL/H,EAOI,EAPJA,MACAwC,EAMI,EANJA,OACAjG,EAKI,EALJA,KAGAyL,GAEI,EAJJ3K,KAII,EAHJoF,OAGI,EAFJuF,SAEI,oEAMJ,OACE,sBACEhM,UAAU,gBACVgE,MAAOA,EACPiI,KAAK,SAHP,UAME,qBAAKjM,UAAU,uBAAf,SACE,+BACGwG,EAAOjC,KAAI,SAAC2H,EAAMJ,GAAP,OACV,sBAAgB9L,UAAWkM,EAAKnI,MAAQ,eAAiB,GAAzD,SACGmI,EAAKlI,OADG8H,UAMjB,qBAAK9L,UAAU,wBAAf,SACE,+BACGO,EAAKgE,KAAI,SAAC2H,EAAMJ,GAAP,OACR,sBAAgB9L,UAAWkM,EAAKnI,MAAQ,eAAiB,GAAzD,SACGmI,EAAKlI,OADG8H,UAOhBE,GACC,qBAAKhM,UAAU,yBAAf,SACE,cAAC,GAAD,CAAiBwG,OAAQxC,UAO7BmI,GAAoB,SAAC,GAA0C,IAAxC5L,EAAuC,EAAvCA,KAAM6E,EAAiC,EAAjCA,QAAS4G,EAAwB,EAAxBA,QAAYlM,EAAY,6CAClE,OACE,qCACE,kCACE,6BAAKS,MAEN6E,EAAQb,KAAI,SAAC6H,EAAQN,GAAT,OACX,wBAAC,GAAD,2BAAoBM,GAApB,IAA4BxJ,IAAKkJ,EAAKE,QAASA,GAAalM,WAM9DuM,GAAmB,SAAC,GAAgB,IAAd7K,EAAa,EAAbA,OAC1B,OACE,6BACGA,EAAO+C,KAAI,SAAC+H,EAAOR,GAAR,OACV,oBAAI9L,UAAU,gBAAd,SAA+BsM,UAsCxBtC,gBAvHS,SAAC5B,EAAOiD,GAAc,IAAD,EACjBjD,EAAMiB,SAASlB,cAAjCzB,EADmC,EACnCA,OAAQC,EAD2B,EAC3BA,MAChB,MAAO,CACLnF,OAAQ4G,EAAM5G,OAAOoE,OACrBc,SACAC,YAIuB,SAACpE,GAAD,MAAe,CACxCgK,WAAY,SAAC/F,GAAD,OAAYjE,ERXA,SAACiE,GAAD,MAAa,CACrCnF,KAAM6H,GACN1C,UQSiC+F,CAAW/F,KAC5CgG,aAAc,kBAAMjK,ERhBa,CACjClB,KAAM8H,MQgBN5B,mBAAoB,kBAAMhF,EAASgF,UA2GtByC,EAhCI,SAAC,GAAyC,IAAvCxI,EAAsC,EAAtCA,OAAQkF,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,MAAU7G,EAAY,4CACpD2M,EAAOjL,EAAOa,OAClB,cAAC,GAAD,CAAkBb,OAAQA,IACtBkF,GAAUC,EAEXD,GAAUA,EAAOrE,QAAYsE,GAASA,EAAMtE,OAC/C,sBAAKrC,UAAU,iBAAf,UACG0G,EAAOrE,QACN,cAAC,GAAD,aACE2J,SAAO,EACPzL,KAAM,SACN6E,QAASsB,GACL5G,IAGP6G,EAAMtE,OAAS,GACd,cAAC,GAAD,aAAmB9B,KAAM,QAAS6E,QAASuB,GAAW7G,OAI1D,kCACE,qDAjBF,6BAqBF,OACE,qBAAKE,UAAU,UAAf,SACE,qBAAKA,UAAU,cAAf,SAA8ByM,S,sCCxDrBzC,I,OAAAA,aA5DS,SAAC5B,EAAO6B,GAAR,MAAuB,CAC7CzI,OAAQ4G,EAAM5G,OAAOhB,UAGI,SAAC+B,EAAD,OAAahC,EAAb,EAAaA,KAAb,MAAyB,CAClDyB,WAAY,SAACE,GAAD,OAAaK,EAASP,EAAWzB,EAAM2B,KACnDZ,gBAAiB,kBAAMiB,EAASjB,SAsDnB0I,EAnDM,SAAC,GAOf,IANLxI,EAMI,EANJA,OACAjB,EAKI,EALJA,KACAmM,EAII,EAJJA,WACAC,EAGI,EAHJA,SACA3K,EAEI,EAFJA,WACAV,EACI,EADJA,gBACI,EAC4B6I,IAAMC,SAAS7J,GAD3C,mBACGqM,EADH,KACaC,EADb,KA0BJ,OACE,mCACE,gCACE,sBAAM7M,UAAU,iBAAiBuK,SA1BlB,SAACC,GACpBA,EAAEC,kBACEmC,IAAarM,GAAQoM,EAASC,MAC5BA,IAAarM,GAAMyB,EAAW4K,GAClCF,GAAW,GACXG,EAAY,IACZvL,MAoBE,SACE,uBACED,KAAK,OACLrB,UAAU,QACVgE,MAAO4I,EACPjC,SAAU,SAACH,GAAD,OAAOqC,EAAYrC,EAAEI,cAAc5G,QAC7C6G,WAAS,MArBZrJ,EAAOa,OAEV,6BACGb,EAAO+C,KAAI,SAAC+H,EAAOR,GAAR,OACV,oBAAc9L,UAAU,gBAAxB,SACGsM,GADMR,QAJY,c,mECQhB9B,I,OAAAA,aApCS,SAAC5B,EAAOiD,GAAR,MAAsB,CAC5C7K,MAAO4H,EAAMiB,SAAS7I,UAGG,SAAC+B,EAAD,OAAa9B,EAAb,EAAaA,KAAb,MAAyB,CAClDU,eAAgB,SAACqF,GAAD,OAAYjE,EAASpB,EAAeV,EAAM+F,QA+B7CwD,EA5BO,SAAC,GAAsD,IAApDvJ,EAAmD,EAAnDA,KAAMqM,EAA6C,EAA7CA,KAAMtB,EAAuC,EAAvCA,OAAQrK,EAA+B,EAA/BA,eAC7BW,GAD4D,0DAClDrB,EAAhBF,KAAgBE,EAAVqB,OACd,OACE,mCACE,eAAC2J,GAAA,EAAD,CAAOC,OAAQoB,EAAMtB,OAAQA,EAAQxL,UAAU,aAA/C,UACE,cAAC4L,GAAA,EAAD,CAAaJ,OAAQA,EAArB,6BACA,cAACK,GAAA,EAAD,CAAW7L,UAAU,kBAArB,SACG8B,EAAMyC,KAAI,SAACnD,EAAM0K,GAAP,OACT,sBAEE9L,UAAU,kBACVkL,QAAS,SAACV,GACRA,EAAEC,iBACFtJ,EAAeC,IALnB,UAQE,+BAAOA,IACP,8BACE,cAAC,KAAD,CAAU+J,KAAM,GAAIC,MAAM,uCATvBU,iBCqCJiB,GAhDM,SAAC,GAAsC,IAApCtM,EAAmC,EAAnCA,KAAMmB,EAA6B,EAA7BA,WAAYoL,EAAiB,EAAjBA,WAAiB,EACjC7C,IAAMC,UAAS,GADkB,mBAClD0C,EADkD,KAC5CG,EAD4C,OAEvB9C,IAAMC,UAAS,GAFQ,mBAElD8C,EAFkD,KAEvCC,EAFuC,KAMzD,OACE,qCACE,eAACC,GAAA,EAAD,CAAgB1B,OAAQoB,EAAMtB,OAJnB,kBAAMyB,GAASH,IAIoBO,UAAU,OAAxD,UACE,cAACC,GAAA,EAAD,CACElC,MAAM,cACNpL,UAAU,uBACVuN,cAAY,QAHd,SAKE,cAAC,KAAD,CAAyBpC,KAAM,GAAIC,MAAM,kBAG3C,eAACoC,GAAA,EAAD,CAAcxN,UAAU,qBAAqByN,OAAO,EAApD,UACE,eAACC,GAAA,EAAD,CAAcxC,QAAStJ,EAAvB,UACE,+BACE,cAAC,KAAD,CAAiBuJ,KAAM,OAF3B,iBAOA,eAACuC,GAAA,EAAD,CAAcxC,QAAS8B,EAAvB,UACE,+BACE,cAAC,KAAD,CAAe7B,KAAM,OAFzB,iBAOA,eAACuC,GAAA,EAAD,CAAcxC,QAAS,kBAAMiC,GAAa,IAA1C,UACE,+BACE,cAAC,KAAD,CAAahC,KAAM,OAFvB,qBAWJ,cAAC,GAAD,CAAe1K,KAAMA,EAAMqM,KAAMI,EAAW1B,OAxCxB,kBAAM2B,GAAcD,UCfjCS,IAFEC,EAAQ,KAEJ,SAACC,GAAD,OAAOA,EAAEC,QAAQ,GAAGC,eAAe,QAEzCC,GAAW,SAACC,GAAD,OACpBA,GAAiBA,EAAQ,EAAI,KAAON,GAAIO,KAAKC,IAAIF,IAAU,IAAMN,GAAIM,IAE5DG,GAAa,SAACH,GAAD,OAAYA,EAAQN,GAAI,IAAMM,GAAS,IAAM,UCH1DI,GAAe,SAACC,GAAD,IAAQC,EAAR,uDAAgB,gBAAhB,OAC1BH,GAAWE,GAASA,EAAMC,KAEfC,GAAa,SAACF,GACzB,OAAON,GAASM,GAASA,EAAMG,cCC3BC,GAAgB,SAAC,GAAe,IAAbJ,EAAY,EAAZA,MACjBK,EDCkB,SAACL,GAAD,ODFDzL,ECEqByL,GAASA,EAAMM,gBDFpB/L,EAAM,EAAI,WAAa,WAAxC,IAACA,EECTgM,CAAWP,GACzB,OAAO,sBAAMtO,UAAW2O,EAAjB,SAAyBN,GAAaC,MAmBhCtE,gBAzBS,SAAC5B,EAAD,OAAU5B,EAAV,EAAUA,OAAV,MAAwB,CAC9C8H,MAAOlG,EAAMiB,SAASrC,OAAOR,MAwBhBwD,EAhBE,SAAC,GAAuB,IAArBxD,EAAoB,EAApBA,OAAQ8H,EAAY,EAAZA,MAC1B,OACE,sBAAKtO,UAAU,YAAf,UACE,+BAAOwG,EAAOgC,gBAEd,qBAAKxI,UAAU,uBAAf,uBAEA,sBAAKA,UAAU,cAAf,UACE,+BAAOwO,GAAWF,KAClB,qBAAKnO,MAAO,CAAE2O,OAAQ,SACtB,cAAC,GAAD,CAAeR,MAAOA,aCcxBS,GAAeC,cAAgB,gBAAGxI,EAAH,EAAGA,OAAH,OACnC,cAAC,GAAD,CAAUA,OAAQA,OAGdyI,GAAeC,cAAkB,YAAgB,IAAbpN,EAAY,EAAZA,MACxC,OACE,8BACGA,EAAMyC,KAAI,SAACiC,EAAQsF,GAAT,OACT,cAACiD,GAAD,CAAcvI,OAAQA,EAA+B3C,MAAOiI,GAA5D,eAA2CtF,YAoFpCwD,gBAhHS,SAAC5B,EAAD,GAAsB,IAAZ3H,EAAW,EAAXA,KAEhC,MAAO,CACLqM,KAAMqC,QAAQ/G,EAAMgB,GAAG5I,MAAMC,EAAKF,OAElCyG,OAAQoB,EAAMiB,SAASrC,OACvB5C,OAAQgE,EAAM3F,SAAS6B,KAAf,QAIe,SAAC/B,EAAD,OAAqBhC,EAArB,EAAaE,KAAQF,KAArB,MAAmC,CAC5DkB,UAAW,kBAAMc,EAASd,EAAUlB,KACpCmB,SAAU,kBAAMa,EAASb,EAASnB,KAClCwG,iBAAkB,SAACX,EAASY,EAAQ7C,EAAQC,GAC1C,OAAO7B,EAASwE,GAAiBX,EAASY,EAAQ7C,EAAQC,KAE5DjC,WAAY,SAACL,GAAD,OAAWS,EAASJ,EAAW,CAAE5B,OAAMuB,YACnDF,WAAY,kBAAMW,EAASX,EAAWrB,QA+FzByJ,EA9EF,SAAC,GAYP,IAXLvJ,EAWI,EAXJA,KACA2O,EAUI,EAVJA,OACApI,EASI,EATJA,OACA8F,EAQI,EARJA,KACApL,EAOI,EAPJA,SACAD,EAMI,EANJA,UACAU,EAKI,EALJA,WACA4E,EAII,EAJJA,iBACAnF,EAGI,EAHJA,WACAwC,EAEI,EAFJA,OACAuI,EACI,EADJA,SAEQpM,EAAgBE,EAAhBF,KAAMuB,EAAUrB,EAAVqB,MAEdqI,IAAMkF,WAAU,WAGVjL,GAAU0I,GAAM/F,EAAiBjF,EAAOkF,EAAQ,GAAI5C,KACvD,IAPC,MAS0B+F,IAAMC,UAAS,GATzC,mBASGkF,EATH,KASY5C,EATZ,KAWCtI,GAEHlB,QAAQqM,KAAK,+CAGf,IAAMC,EACJ,sBAAMxP,UAAU,aAAhB,SACI8M,EAAoC,cAAC,KAAD,CAAgB3B,KAAM,KAAnD,cAAC,KAAD,CAAcA,KAAM,OAgBjC,OAAK1K,EAEH,eAAC,IAAMgP,SAAP,WACE,sBAAKzP,UAAU,6BAAf,UACE,sBAAKA,UAAU,aAAf,UACGoP,EACAE,EACC,cAAC,GAAD,CACE/O,KAAMA,EACNoM,SAAUA,EACVD,WAAYA,IAGd,+BAAOnM,OAIX,sBAAKP,UAAU,gBAAf,UACE,cAAC,GAAD,CACES,KAAMA,EACNmB,WAAYA,EACZoL,WAAY,kBAAMN,GAAW,MAE/B,qBAAKxB,QAnCM,WACb4B,EAAMrL,KAER2C,GAAU2C,EAAiBjF,EAAOkF,EAAQ,GAAI5C,GAC9C1C,MA+BI,SAA2B8N,UAI9B1C,GAAQ,cAACmC,GAAD,CAAcnN,MAAOA,EAAO4N,UA/BvB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC7BzN,EAAW0N,KAAU/N,EAAO6N,EAAUC,SAKjBrP,GAFL,Q,SChDLuP,I,OA5CS,SAAC,GAA0C,IAAxClD,EAAuC,EAAvCA,SAAUvE,EAA6B,EAA7BA,OAAQ0H,EAAqB,EAArBA,OAAQvO,EAAa,EAAbA,OAAa,EACxC2I,IAAMC,SAASwC,GAAY,IADa,mBACzDrM,EADyD,KACnDyP,EADmD,KAiBhE,OACE,sBAAKhQ,UAAU,sBAAf,UACE,uBAAMuK,SAAU,SAACC,GAAD,OAhBC,SAACA,GACpBA,EAAEC,iBACFpC,EAAO9H,GACPyP,EAAQ,IAaiBC,CAAazF,IAAIxK,UAAU,YAAlD,UACE,uBACEqB,KAAK,OACLrB,UAAU,aACVgE,MAAOzD,EACPmK,YAAY,YACZC,SAAU,SAACH,GAAD,OAAOwF,EAAQxF,EAAEI,cAAc5G,QACzC6G,WAAS,IAGX,sBAAK7K,UAAU,qBAAf,UACE,wBAAQqB,KAAK,SAAb,SACE,cAAC,KAAD,CAAc8J,KAAM,GAAIC,MAAM,uCAEhC,wBAAQ/J,KAAK,SAAS6J,QAAS6E,EAA/B,SACE,cAAC,KAAD,CAAgB5E,KAAM,GAAIC,MAAM,2CAvBtC,oBAAIpL,UAAU,SAAd,SACGwB,GAAUA,EAAO+C,KAAI,SAAC+H,EAAOR,GAAR,OAAgB,6BAAeQ,GAANR,aCoBjDoE,I,OAAaC,cAAe,kBAChC,sBAAMnQ,UAAU,cAAhB,SACE,cAAC,KAAD,CAAiBmL,KAAM,GAAIC,MAAM,iCAI/B2D,GAAeC,cAAgB,gBAAGvO,EAAH,EAAGA,KAAMkM,EAAT,EAASA,SAAT,OACnC,cAAC,GAAD,CAAMlM,KAAMA,EAAM2O,OAAQ,cAACc,GAAD,IAAgBvD,SAAUA,OAGhDsC,GAAeC,cAAkB,YAA0B,IAAvB1O,EAAsB,EAAtBA,MAAOmM,EAAe,EAAfA,SAC/C,OACE,8BACGnM,EAAM+D,KAAI,SAAC9D,EAAMqL,GAAP,OACT,cAAC,GAAD,CAEEjI,MAAOiI,EACPrL,KAAMA,EACNkM,SAAUA,GAJZ,oBACoBlM,EAAKF,eAsDlByJ,gBAtFS,SAAC5B,EAAO6B,GAAR,MAAuB,CAC7CzJ,MAAO4H,EAAMiB,SAAS7I,UAGG,SAAC+B,GAAD,MAAe,CACxCR,WAAY,SAACxB,GAAD,OAAUgC,EAASR,EAAWxB,KAC1C6P,YAAa,SAAC5P,GAAD,OAAW+B,EAASZ,EAAanB,KAC9C4B,aAAc,SAACiO,EAAS7P,GACtB,IAAIgB,EAASY,EAAaiO,EAAS7P,GACnC,OAAIgB,EAAOa,SACTE,EAAShB,EAAkBC,KACpB,OA2EEwI,EA5CD,SAAC,GAAsD,IAApDxJ,EAAmD,EAAnDA,MAAOuB,EAA4C,EAA5CA,WAAYqO,EAAgC,EAAhCA,YAAahO,EAAmB,EAAnBA,aAAmB,EAClC+H,IAAMC,UAAS,GADmB,mBAC3DkG,EAD2D,KACjDC,EADiD,KASlE,OACE,mCACE,sBAAKvQ,UAAU,QAAf,UACE,mCACE,8BACE,8CAEF,qBAAKkL,QAAS,kBAAMqF,GAAY,SAACD,GAAD,OAAeA,MAA/C,SACE,cAAC,KAAD,CACEnF,KAAM,GACNC,MAAM,yBACNpL,UAAU,uBAKfsQ,GACC,cAAC,GAAD,CACE1D,SAAS,GACTvE,OAAQtG,EACRgO,OAAQ,kBAAMQ,GAAY,MAI9B,cAAC,GAAD,CACE/P,MAAOA,EACPmM,SA5BS,SAAC0D,GAAD,OAAajO,EAAaiO,EAAS7P,IA6B5CkP,UAjCU,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC7BQ,EAAYP,KAAUrP,EAAOmP,EAAUC,KAiCjCY,eAAa,YC5FjBC,GACF7C,EAAQ,KAAgB8C,QAyCbC,GAtCH,WACV,IAAMC,EACJ,qCACE,cAACC,GAAA,EAAD,UACE,0BAAS7Q,UAAU,iBAAnB,UACE,mCACE,cAAC,GAAD,IAEA,qBAAKA,UAAU,gBAAf,SACE,cAAC,KAAD,CACEmL,KAAM,GACNnL,UAAU,qBACVoL,MAAM,cAKZ,cAAC,GAAD,SAIJ,cAACyF,GAAA,EAAD,IAEA,cAACA,GAAA,EAAD,UACE,yBAAS7Q,UAAU,gBAAnB,SACE,cAAC,GAAD,WAMR,OACE,cAAC8Q,GAAA,EAAD,CAAWC,OAAK,EAAhB,SACsC,cAACN,GAAD,UAAUG,O,OCzBpDI,SAASC,iBAAiB,oBAAoB,WAC5C,IAAItH,EAAiB,GAInBA,EAAc,2BACTA,GADS,IAEZN,SAAU,CAER7I,MAAOwC,KAAKkO,MAAMpO,aAAaqO,QAAQ,WAAa,IAEtD1O,SAAU,CACR6B,KAAMtB,KAAKkO,MAAMpO,aAAaqO,QAAQ,UAAY,IAEpD/H,GAAIpG,KAAKkO,MAAMpO,aAAaqO,QAAQ,QAAU,KAMlD,IAAMvH,EAAQF,GAAeC,GACvByH,EAAOJ,SAASK,eAAe,QAErCC,IAASC,OACP,cAAC,IAAD,CAAU3H,MAAOA,EAAjB,SACE,cAAC,IAAM4H,WAAP,UACE,cAAC,GAAD,QAGJJ,GAIAJ,SAASS,qBAAqB,QAAQ,GAAGzR,WAAa,aAMxD0R,OAAO9H,MAAQA,EACf8H,OAAO9L,OAASA,EAChB8L,OAAOjR,KAAOA,EACdiR,OAAOhL,OAASA,EAChBgL,OAAOpP,aAAeA,M,mBC9DxBqP,EAAOC,QAAU,CAAC,KAAO,yBAAyB,MAAQ,4B","file":"static/js/main.9a5a98ad.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Col } from 'reactstrap';\nimport styles from './standalone.module.scss';\n\nconst StandAlone = (props) => {\n  return (\n    <Row>\n      <Col md={8} className={styles.body}>\n        <div style={{ margin: '0 auto' }}>\n          <p>Some page with the sidebar opened at the right.</p>\n          <br />\n          <p>Need to add iex API key to have access to stock data.</p>\n        </div>\n      </Col>\n      <Col md={4}>\n        {/* <div className={styles.body} style={{height: '20px'}}/> */}\n        {props.children}\n      </Col>\n    </Row>\n  );\n};\n\nexport default StandAlone;\n","export const getList = (name, lists) => {\n  for (const list of lists) {\n    if (list.name === name) return list;\n  }\n  return null;\n};\n\nexport const listContains = (list, symbol) => {\n  return list.items.some((item) => item === symbol);\n};\n","import { getList } from '../selectors/lists';\n\nexport const RECEIVE_LIST = 'RECEIVE_LIST';\nexport const REMOVE_LIST = 'REMOVE_LIST';\nexport const RENAME_LIST = 'RENAME_LIST';\nexport const RECEIVE_LISTS = 'RECEIVE_LISTS';\nexport const RECEIVE_OPEN_LIST = 'RECEIVE_OPEN_LIST';\nexport const RECEIVE_CLOSE_LIST = 'RECEIVE_CLOSE_LIST';\nexport const RECEIVE_LIST_ERRORS = 'RECEIVE_LIST_ERRORS';\nexport const CLEAR_LIST_ERRORS = 'CLEAR_LIST_ERRORS';\nexport const REMOVE_LIST_ITEM = 'REMOVE_LIST_ITEM';\n\nexport const removeListItem = (list, item) => ({\n  type: REMOVE_LIST_ITEM,\n  list,\n  item,\n});\n\nexport const clearListErrors = () => ({\n  type: CLEAR_LIST_ERRORS,\n});\n\nexport const receiveListErrors = (errors) => ({\n  type: RECEIVE_LIST_ERRORS,\n  errors,\n});\n\nexport const closeList = (name) => ({\n  type: RECEIVE_CLOSE_LIST,\n  name,\n});\n\nexport const openList = (name) => ({\n  type: RECEIVE_OPEN_LIST,\n  name,\n});\n\nexport const receiveLists = (lists) => ({\n  type: RECEIVE_LISTS,\n  lists,\n});\n\nexport const removeList = (name) => ({\n  type: REMOVE_LIST,\n  name,\n});\n\nexport const addToList = ({ name }, items) => ({\n  type: RECEIVE_LIST,\n  list: {\n    name,\n    items,\n  },\n});\n\nexport const createList = (name) => ({\n  type: RECEIVE_LIST,\n  list: {\n    name,\n    items: [],\n  },\n});\n\nexport const renameList = (oldName, newName) => ({\n  type: RENAME_LIST,\n  newName,\n  oldName,\n});\n\nexport const updateList = (list) => ({\n  type: RECEIVE_LIST,\n  list,\n});\n\nexport const validateList = (name, lists) => {\n  if (!name.length) {\n    return ['must be named'];\n  } else if (getList(name, lists)) {\n    return [`${name} already exists!`];\n  }\n  return [];\n};\n","import { receiveLists } from '../actions/list_actions';\n\nvar chrome;\nconst chromeOptions = ['stocks', 'keys', 'lists'];\n\nexport const loadSettings = () => (dispatch) => {\n  if (chrome && chrome.storage) {\n    chrome.storage.sync.get(chromeOptions, function (items) {\n      // TODO: update redux state with rest of settings\n      dispatch(receiveLists(items.lists));\n    });\n\n    return true;\n  }\n  return false;\n};\n\n// If in chrome extension, sync, otherwise save to localStorage\nexport const saveSettings = (settings) => {\n  if (chrome && chrome.storage) {\n    chrome.storage.sync.set(settings, function () {\n      console.log('Settings saved to chrome storage');\n    });\n  } else {\n    for (const [key, val] of Object.entries(settings)) {\n      localStorage.setItem(key, JSON.stringify(val));\n    }\n    console.log('Settings saved to localStorage');\n  }\n};\n","export const mapKeys = (obj, fn) =>\n  Object.keys(obj).reduce((acc, k) => {\n    acc[fn(obj[k], k, obj)] = obj[k];\n    return acc;\n  }, {});\n\n// split string, STR, by query, Q, returning parts marking those that matched\nexport const splitByMatches = (q, str) => {\n  if (q.length === 0) return [];\n  let m,\n    i = 0,\n    parts = [];\n  const re = new RegExp(q, 'ig');\n\n  while ((m = re.exec(str)) && i < str.length) {\n    m.index > 0 &&\n      parts.push({\n        match: false,\n        value: str.slice(i, m.index),\n      });\n    parts.push({\n      match: true,\n      value: str.slice(m.index, m.index + q.length),\n    });\n    i = m.index + q.length;\n  }\n\n  i < str.length &&\n    parts.push({\n      match: false,\n      value: str.slice(i),\n    });\n\n  return parts;\n};\n","/**\n * Alphavantage financial API:\n * https:*www.alphavantage.co/documentation/\n */\nimport { mapKeys } from './utils';\n\nconst BASE_URL = 'https://www.alphavantage.co/query?';\n\nconst createUrl = (params, apiKey) => {\n  params.apikey = apiKey;\n  const encoded = Object.keys(params)\n    .map((key) => `${key}=${params[key]}`)\n    .join('&');\n  return BASE_URL + encoded;\n};\n\nconst sendRequest = async (params, apiKey) => {\n  const url = createUrl(params, apiKey);\n  console.log('API: ', url);\n  const res = await fetch(url);\n  if (!res.ok) throw new Error(`API Error: ${res.status}`);\n  const data = await res.json();\n\n  if (typeof data['Error Message'] !== 'undefined') {\n    throw new Error(data['Error Message']);\n  } else if (typeof data['Note'] !== 'undefined') {\n    throw new Error(`API limit exceeded: ${data['Note']}`);\n  }\n\n  return data;\n};\n\n// Searching\n\n// fields are prepended with '1. ', '2. ', etc.\nconst cleanSearch = (results) => {\n  return results.map((res) =>\n    mapKeys(res, (_, k) => k.slice(3).replace(/ /g, '_'))\n  );\n};\n\nexport const search = async (query, apiKey) => {\n  const params = {\n    function: 'SYMBOL_SEARCH',\n    keywords: query,\n  };\n\n  let res = await sendRequest(params, apiKey);\n  return res['bestMatches'] ? cleanSearch(res['bestMatches']) : [];\n};\n","/**\n * IexCloud financial API:\n * https://iexcloud.io/docs/api/\n */\n// import { mapKeys } from './utils';\nconst BASE_URL = 'https://cloud.iexapis.com/stable';\n\nconst createUrl = (endpoint, params, apiKey) => {\n  params.token = apiKey;\n  const encoded = Object.keys(params)\n    .map((key) => `${key}=${params[key]}`)\n    .join('&');\n  return `${BASE_URL}${endpoint}?${encoded}`;\n};\n\nconst sendRequest = async (endpoint, params, apiKey) => {\n  const url = createUrl(endpoint, params, apiKey);\n  console.log('API: ', url);\n  const res = await fetch(url);\n  if (!res.ok) throw new Error(`API Error: ${res.status}`);\n  const data = await res.json();\n\n  // if (typeof data['Error Message'] !== 'undefined') {\n  //   throw new Error(data['Error Message']);\n  // } else if (typeof data['Note'] !== 'undefined') {\n  //   throw new Error(`API limit exceeded: ${data['Note']}`);\n  // }\n\n  return data;\n};\n\n// Quotes\nexport const fetchQuotes = async (symbols, params, apiKey) => {\n  return sendRequest(\n    '/stock/market/batch',\n    {\n      symbols: symbols.join(','),\n      types: 'quote',\n      ...params,\n    },\n    apiKey\n  );\n};\n","/**\n * Search for companies/tickers\n */\nimport { partition } from 'lodash';\n\nimport * as AvAPI from './av_api';\nimport * as IexAPI from './iex_api';\nimport { splitByMatches } from './utils';\n\nexport const formatSearchResults = (query, results) => {\n  const [stocks, funds] = partition(\n    results.map(({ symbol, name, type, region }) => ({\n      value: symbol,\n      symbol: splitByMatches(query, symbol),\n      name: splitByMatches(query, name),\n      type,\n      region,\n    })),\n    ['type', 'Equity']\n  );\n  return { stocks, funds };\n};\n\nexport const fetchSearchResults = async (query, apiKey = null) => {\n  let results = await AvAPI.search(query, apiKey);\n  return formatSearchResults(query, results);\n};\n\n// TODO: add updateQuotes(oldQuotes, interval) to only refresh\n// quotes that are stale (and current time is during trading/extended hours)\n// unconditionally fetch quotes\nexport const fetchQuotes = IexAPI.fetchQuotes;\n\n// fetch quotes for new symbols\nexport const maybeFetchQuotes = async (symbols, quotes, params, apiKey) => {\n  const syms = symbols.filter((symbol) => !quotes[symbol]);\n  if (syms.length) return fetchQuotes(syms, params, apiKey);\n  return false;\n};\n","import * as StocksAPI from '../util/stocks_api';\n\nexport const RECEIVE_SEARCH_RESULTS = 'RECEIVE_SEARCH_RESULTS';\nexport const CLEAR_SEARCH_RESULTS = 'CLEAR_SEARCH_RESULTS';\nexport const RECEIVE_SEARCH_ERRORS = 'RECEIVE_SEARCH_ERRORS';\n\nexport const receiveSearchErrors = (errors) => ({\n  type: RECEIVE_SEARCH_ERRORS,\n  errors,\n});\n\nexport const clearSearchResults = () => ({\n  type: CLEAR_SEARCH_RESULTS,\n});\n\nexport const receiveSearchResults = (results) => ({\n  type: RECEIVE_SEARCH_RESULTS,\n  results,\n});\n\nexport const fetchSearchResults = (query, apiKey) => (dispatch) => {\n  return StocksAPI.fetchSearchResults(query, apiKey)\n    .then((results) => dispatch(receiveSearchResults(results)))\n    .catch((errors) => dispatch(receiveSearchErrors(errors)));\n};\n","import { saveSettings } from '../../util/settings';\nimport {\n  RENAME_LIST,\n  RECEIVE_LIST,\n  REMOVE_LIST,\n  RECEIVE_LISTS,\n  REMOVE_LIST_ITEM,\n} from '../../actions/list_actions';\nimport { getList } from '../../selectors/lists';\n\nconst removeList = (name, lists) => {\n  return lists.filter((list) => list.name !== name);\n};\n\nexport default (state = [], action) => {\n  Object.freeze(state);\n  let res, old;\n\n  switch (action.type) {\n    case RECEIVE_LISTS:\n      return action.lists;\n\n    case RECEIVE_LIST:\n      res = [...state];\n      let items = action.list.items.map((item) => item.toUpperCase());\n      if ((old = getList(action.list.name, state))) {\n        items = [...new Set(items.concat(old.items))];\n        old.items = items;\n      } else {\n        res.push({ name: action.list.name, items });\n      }\n      break;\n\n    case REMOVE_LIST_ITEM:\n      res = [...state];\n      old = getList(action.list.name, state);\n      old.items = old.items.filter((ele) => ele !== action.item);\n      break;\n\n    case REMOVE_LIST:\n      res = removeList(action.name, state);\n      break;\n\n    case RENAME_LIST:\n      res = [...state];\n      for (const list of state) {\n        if (list.name === action.oldName) {\n          list.name = action.newName;\n          break;\n        }\n      }\n      break;\n\n    default:\n      return state;\n  }\n\n  saveSettings({ lists: res });\n  return res;\n};\n","import * as StocksAPI from '../util/stocks_api';\n\nexport const RECEIVE_BATCH_QUOTES = 'RECEIVE_BATCH_QUOTES';\nexport const RECEIVE_API_ERRORS = 'RECEIVE_API_ERRORS';\nexport const CLEAR_API_ERRORS = 'CLEAR_API_ERRORS';\n\nexport const clearApiErrors = () => ({\n  type: CLEAR_API_ERRORS,\n});\n\nexport const receiveApiErrors = (errors) => ({\n  type: RECEIVE_API_ERRORS,\n  errors,\n});\n\nexport const receiveBatchQuotes = (data) => ({\n  type: RECEIVE_BATCH_QUOTES,\n  data,\n});\n\nexport const fetchQuotes = (symbols, params, apiKey) => (dispatch) => {\n  return StocksAPI.fetchQuotes(symbols, params, apiKey)\n    .then((results) => dispatch(receiveBatchQuotes(results)))\n    .catch((errors) => dispatch(receiveApiErrors(errors)));\n};\n\nexport const maybeFetchQuotes = (symbols, quotes, params, apiKey) => (\n  dispatch\n) => {\n  return StocksAPI.maybeFetchQuotes(symbols, quotes, params, apiKey)\n    .then((results) => results && dispatch(receiveBatchQuotes(results)))\n    .catch((errors) => dispatch(receiveApiErrors(errors)));\n};\n","import { combineReducers } from 'redux';\n\nimport searchResults from './entities/search_reducer';\nimport lists from './entities/lists_reducer';\nimport quotes from './entities/stock_quotes_reducer';\n\nexport default combineReducers({\n  searchResults,\n  lists,\n  quotes,\n});\n","import {\n  RECEIVE_SEARCH_RESULTS,\n  CLEAR_SEARCH_RESULTS,\n} from '../../actions/search_actions';\n\nexport default (state = {}, action) => {\n  Object.freeze(state);\n  switch (action.type) {\n    case RECEIVE_SEARCH_RESULTS:\n      return action.results;\n\n    case CLEAR_SEARCH_RESULTS:\n      return {};\n\n    default:\n      return state;\n  }\n};\n","import { RECEIVE_BATCH_QUOTES } from '../../actions/stock_actions';\n\nexport default (state = {}, action) => {\n  Object.freeze(state);\n  switch (action.type) {\n    case RECEIVE_BATCH_QUOTES:\n      let ns = Object.assign({}, state);\n      for (const [key, val] of Object.entries(action.data)) {\n        ns[key] = val['quote'];\n      }\n      return ns;\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport search from './errors/search_errors_reducer';\nimport api from './errors/api_errors_reducer';\nimport lists from './errors/list_errors_reducer';\n\nexport default combineReducers({\n  search,\n  api,\n  lists,\n});\n","import {\n  RECEIVE_SEARCH_ERRORS,\n  RECEIVE_SEARCH_RESULTS,\n  CLEAR_SEARCH_RESULTS,\n} from '../../actions/search_actions';\n\nexport default (state = [], action) => {\n  Object.freeze(state);\n  switch (action.type) {\n    case RECEIVE_SEARCH_ERRORS:\n      return [action.errors.message];\n\n    case RECEIVE_SEARCH_RESULTS:\n    case CLEAR_SEARCH_RESULTS:\n      return [];\n\n    default:\n      return state;\n  }\n};\n","import {\n  RECEIVE_API_ERRORS,\n  RECEIVE_BATCH_QUOTES,\n  CLEAR_API_ERRORS,\n} from '../../actions/stock_actions';\n\nexport default (state = [], action) => {\n  Object.freeze(state);\n  switch (action.type) {\n    case RECEIVE_API_ERRORS:\n      return [action.errors.message];\n\n    case CLEAR_API_ERRORS:\n    case RECEIVE_BATCH_QUOTES:\n      return [];\n\n    default:\n      return state;\n  }\n};\n","import {\n  RECEIVE_LIST_ERRORS,\n  RECEIVE_LIST,\n  CLEAR_LIST_ERRORS,\n} from '../../actions/list_actions';\n\nexport default (state = [], action) => {\n  Object.freeze(state);\n  switch (action.type) {\n    case RECEIVE_LIST_ERRORS:\n      return action.errors;\n\n    case RECEIVE_LIST:\n    case CLEAR_LIST_ERRORS:\n      return [];\n\n    default:\n      return state;\n  }\n};\n","export const RECEIVE_API_KEYS = 'RECEIVE_API_KEYS';\n\nexport const receiveApiKeys = (keys) => ({\n  type: RECEIVE_API_KEYS,\n  keys,\n});\n","import { merge } from 'lodash';\nimport { RECEIVE_API_KEYS } from '../actions/settings_actions';\n\nconst _defaultState = {\n  keys: {},\n};\n\nexport default (state = _defaultState, action) => {\n  Object.freeze(state);\n\n  switch (action.type) {\n    case RECEIVE_API_KEYS:\n      let keys = Object.assign({}, state.keys);\n      return Object.assign({}, state, merge(keys, action.keys));\n\n    default:\n      return state;\n  }\n};\n","export const RECEIVE_CURRENT_SYMBOL = 'RECEIVE_CURRENT_SYMBOL';\nexport const CLEAR_CURRENT_SYMBOL = 'CLEAR_CURRENT_SYMBOL';\n\nexport const clearCurrent = () => ({\n  type: CLEAR_CURRENT_SYMBOL,\n});\n\nexport const setCurrent = (symbol) => ({\n  type: RECEIVE_CURRENT_SYMBOL,\n  symbol,\n});\n","import { combineReducers } from 'redux';\nimport lists from './ui/lists_reducer';\n\nexport default combineReducers({\n  lists,\n});\n","import { saveSettings } from '../../util/settings';\nimport {\n  RECEIVE_OPEN_LIST,\n  RECEIVE_CLOSE_LIST,\n} from '../../actions/list_actions';\n\nexport default (state = {}, action) => {\n  Object.freeze(state);\n  let res;\n\n  switch (action.type) {\n    case RECEIVE_OPEN_LIST:\n      res = Object.assign({}, state, { [action.name]: true });\n      break;\n\n    case RECEIVE_CLOSE_LIST:\n      res = Object.assign({}, state);\n      delete res[action.name];\n      break;\n\n    default:\n      return state;\n  }\n\n  saveSettings({ ui: { lists: res } });\n  return res;\n};\n","import { combineReducers } from 'redux';\n\nimport entities from './entities_reducer';\nimport errors from './errors_reducer';\nimport settings from './settings_reducer';\nimport current from './current_symbol_reducer';\nimport ui from './ui_reducer';\n\nexport default combineReducers({\n  entities,\n  errors,\n  settings,\n  current,\n  ui,\n});\n","import {\n  RECEIVE_CURRENT_SYMBOL,\n  CLEAR_CURRENT_SYMBOL,\n} from '../actions/current_symbol_actions';\n\nexport default (state = null, action) => {\n  Object.freeze(state);\n  switch (action.type) {\n    case RECEIVE_CURRENT_SYMBOL:\n      return action.symbol;\n\n    case CLEAR_CURRENT_SYMBOL:\n      return null;\n\n    default:\n      return state;\n  }\n};\n","import { applyMiddleware, createStore } from 'redux';\nimport rootReducer from '../reducers/root_reducer';\nimport thunk from 'redux-thunk';\n\nconst middlewares = [thunk];\n\nif (process.env.NODE_ENV !== 'production') {\n  const { logger } = require('redux-logger');\n  middlewares.push(logger);\n}\n\nconst configureStore = (preloadedState = {}) => {\n  const store = createStore(\n    rootReducer,\n    preloadedState,\n    process.env.NODE_ENV !== 'production'\n      ? require('redux-devtools-extension').composeWithDevTools(\n          applyMiddleware(...middlewares)\n        )\n      : applyMiddleware(...middlewares)\n  );\n\n  return store;\n};\n\nexport default configureStore;\n","import React from 'react';\nimport { connect } from 'react-redux';\n// import { BiSearch } from 'react-icons/bi';\n// import { GiCancel } from 'react-icons/gi';\n\nimport './search.scss';\nimport {\n  fetchSearchResults,\n  clearSearchResults,\n} from '../../actions/search_actions';\n\nconst mapStateToProps = (state, _ownProps) => ({\n  avKey: state.settings.keys['avKey'],\n});\n\nconst mapDispatchToProps = (dispatch, { avKey }) => ({\n  fetchSearchResults: (query) => dispatch(fetchSearchResults(query, avKey)),\n  clearSearchResults: () => dispatch(clearSearchResults()),\n});\n\nconst Search = ({ fetchSearchResults, clearSearchResults }) => {\n  const [query, setQuery] = React.useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (query.length) fetchSearchResults(query);\n    else clearSearchResults();\n    setQuery('');\n  };\n\n  return (\n    <form id=\"search-form\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"search-input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(e) => setQuery(e.currentTarget.value)}\n        autoFocus\n      />\n      {/* {query.length > 0 && */}\n      {/*  <button type='button' onClick={() => { */}\n      {/*    clearSearchResults(); */}\n      {/*    setQuery(''); */}\n      {/*  }}> */}\n      {/*    <GiCancel size={24} color='var(--st__neutral-fg3)'/> */}\n      {/*  </button>} */}\n    </form>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { AiOutlinePlus } from 'react-icons/ai';\nimport { GiCheckMark } from 'react-icons/gi';\n\nimport { addToList, removeListItem } from '../../../actions/list_actions';\nimport { listContains } from '../../../selectors/lists';\nimport { maybeFetchQuotes } from '../../../actions/stock_actions';\nimport { clearSearchResults } from '../../../actions/search_actions';\nimport './list-modal.scss';\n\nconst mapStateToProps = (state, ownProps) => ({\n  lists: state.entities.lists,\n  apiKey: state.settings.keys['iex'],\n  quotes: state.entities.quotes,\n});\n\nconst mapDispatchToProps = (dispatch, { symbol }) => ({\n  addToList: (list, quotes, apiKey) => {\n    dispatch(addToList(list, [symbol]));\n    dispatch(maybeFetchQuotes([symbol], quotes, {}, apiKey));\n  },\n  removeListItem: (list) => dispatch(removeListItem(list, symbol)),\n  clearSearchResults: () => dispatch(clearSearchResults()),\n});\n\nconst ListItem = ({\n  list,\n  symbol,\n  apiKey,\n  quotes,\n  addToList,\n  removeListItem,\n}) => {\n  const isMember = listContains(list, symbol);\n  const handleClick = () => {\n    if (isMember) removeListItem(list);\n    else addToList(list, quotes, apiKey);\n  };\n  return (\n    <div className=\"list-modal-item\" onClick={handleClick}>\n      <span>{list.name}</span>\n      <div>\n        {isMember && <GiCheckMark size={24} color=\"var(--st__primary-base)\" />}\n      </div>\n    </div>\n  );\n};\n\nconst ListSelectModal = ({ symbol, lists, ...props }) => {\n  const [modal, setModal] = React.useState(false);\n  const toggle = () => setModal(!modal);\n\n  return (\n    <div>\n      <button type=\"button\" onClick={toggle} className=\"list-modal-toggle\">\n        <AiOutlinePlus\n          size={24}\n          color=\"transparent\"\n          className=\"add-symbol-icon\"\n        />\n      </button>\n      <Modal\n        isOpen={modal}\n        toggle={toggle}\n        className=\"list-modal\"\n        onClosed={() => props.clearSearchResults()}\n      >\n        <ModalHeader\n          toggle={toggle}\n        >{`Click List to add ${symbol}`}</ModalHeader>\n        <ModalBody className=\"list-modal-body\">\n          {lists.map((list, idx) => (\n            <ListItem key={idx} symbol={symbol} list={list} {...props} />\n          ))}\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListSelectModal);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport './search-menu.scss';\nimport ListSelectModal from '../lists/modal/ListSelectModal';\nimport { setCurrent, clearCurrent } from '../../actions/current_symbol_actions';\nimport { clearSearchResults } from '../../actions/search_actions';\n\nconst mapStateToProps = (state, ownProps) => {\n  const { stocks, funds } = state.entities.searchResults;\n  return {\n    errors: state.errors.search,\n    stocks,\n    funds,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrent: (symbol) => dispatch(setCurrent(symbol)),\n  clearCurrent: () => dispatch(clearCurrent()),\n  clearSearchResults: () => dispatch(clearSearchResults()),\n});\n\nconst SearchMenuItem = ({\n  value,\n  symbol,\n  name,\n  type,\n  region,\n  addable,\n  ...props\n}) => {\n  const handleClick = (val) => {\n    props.setCurrent(val);\n    props.clearSearchResults();\n  };\n\n  return (\n    <div\n      className=\"search-result\"\n      value={value}\n      role=\"option\"\n      /* onClick={() => handleClick(value)} */\n    >\n      <div className=\"search-result-symbol\">\n        <span>\n          {symbol.map((part, idx) => (\n            <span key={idx} className={part.match ? 'search-match' : ''}>\n              {part.value}\n            </span>\n          ))}\n        </span>\n      </div>\n      <div className=\"search-result-company\">\n        <span>\n          {name.map((part, idx) => (\n            <span key={idx} className={part.match ? 'search-match' : ''}>\n              {part.value}\n            </span>\n          ))}\n        </span>\n      </div>\n\n      {addable && (\n        <div className=\"search-result-controls\">\n          <ListSelectModal symbol={value} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst SearchMenuSection = ({ name, results, addable, ...props }) => {\n  return (\n    <>\n      <section>\n        <h4>{name}</h4>\n      </section>\n      {results.map((result, idx) => (\n        <SearchMenuItem {...result} key={idx} addable={addable} {...props} />\n      ))}\n    </>\n  );\n};\n\nconst SearchMenuErrors = ({ errors }) => {\n  return (\n    <ul>\n      {errors.map((error, idx) => (\n        <li className=\"error-message\">{error}</li>\n      ))}\n    </ul>\n  );\n};\n\nconst SearchMenu = ({ errors, stocks, funds, ...props }) => {\n  const menu = errors.length ? (\n    <SearchMenuErrors errors={errors} />\n  ) : !(stocks || funds) ? (\n    <></>\n  ) : (stocks && stocks.length) || (funds && funds.length) ? (\n    <div className=\"search-results\">\n      {stocks.length && (\n        <SearchMenuSection\n          addable\n          name={'Stocks'}\n          results={stocks}\n          {...props}\n        />\n      )}\n      {funds.length > 0 && (\n        <SearchMenuSection name={'Funds'} results={funds} {...props} />\n      )}\n    </div>\n  ) : (\n    <section>\n      <h4>No matches founds</h4>\n    </section>\n  );\n\n  return (\n    <div className=\"fade-in\">\n      <div className=\"search-menu\">{menu}</div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchMenu);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { clearListErrors, renameList } from '../../../actions/list_actions';\nimport './edit-list-form.scss';\n\nconst mapStateToProps = (state, _ownProps) => ({\n  errors: state.errors.lists,\n});\n\nconst mapDispatchToProps = (dispatch, { name }) => ({\n  renameList: (newName) => dispatch(renameList(name, newName)),\n  clearListErrors: () => dispatch(clearListErrors()),\n});\n\nconst EditListForm = ({\n  errors,\n  name,\n  setEditing,\n  validate,\n  renameList,\n  clearListErrors,\n}) => {\n  const [listName, setListName] = React.useState(name);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (listName === name || validate(listName)) {\n      if (listName !== name) renameList(listName);\n      setEditing(false);\n      setListName('');\n      clearListErrors();\n    }\n  };\n\n  const renderErrors = () => {\n    if (!errors.length) return null;\n    return (\n      <ul>\n        {errors.map((error, idx) => (\n          <li key={idx} className=\"error-message\">\n            {error}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  return (\n    <>\n      <div>\n        <form className=\"list-edit-form\" onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            className=\"input\"\n            value={listName}\n            onChange={(e) => setListName(e.currentTarget.value)}\n            autoFocus\n          />\n        </form>\n        {renderErrors()}\n      </div>\n    </>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditListForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { GiCancel } from 'react-icons/gi';\n\nimport { removeListItem } from '../../../actions/list_actions';\nimport './edit-list-modal.scss';\n\nconst mapStateToProps = (state, ownProps) => ({\n  lists: state.entities.lists,\n});\n\nconst mapDispatchToProps = (dispatch, { list }) => ({\n  removeListItem: (symbol) => dispatch(removeListItem(list, symbol)),\n});\n\nconst EditListModal = ({ list, open, toggle, removeListItem, ...props }) => {\n  const { name, items } = list;\n  return (\n    <>\n      <Modal isOpen={open} toggle={toggle} className=\"list-modal\">\n        <ModalHeader toggle={toggle}>Click to Remove</ModalHeader>\n        <ModalBody className=\"list-modal-body\">\n          {items.map((item, idx) => (\n            <div\n              key={idx}\n              className=\"list-modal-item\"\n              onClick={(e) => {\n                e.preventDefault();\n                removeListItem(item);\n              }}\n            >\n              <span>{item}</span>\n              <div>\n                <GiCancel size={24} color=\"var(--st__semantic-error-base)\" />\n              </div>\n            </div>\n          ))}\n        </ModalBody>\n      </Modal>\n    </>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditListModal);\n","import React from 'react';\nimport { BiDotsHorizontalRounded } from 'react-icons/bi';\nimport { TiDeleteOutline } from 'react-icons/ti';\nimport { AiOutlineEdit } from 'react-icons/ai';\nimport { BsListCheck } from 'react-icons/bs';\nimport {\n  ButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from 'reactstrap';\n\nimport EditListModal from './modal/EditListModal';\n\nconst ListDropdown = ({ list, removeList, toggleEdit }) => {\n  const [open, setOpen] = React.useState(false);\n  const [editModal, setEditModal] = React.useState(false);\n  const toggleEditModal = () => setEditModal(!editModal);\n  const toggle = () => setOpen(!open);\n\n  return (\n    <>\n      <ButtonDropdown isOpen={open} toggle={toggle} direction=\"down\">\n        <DropdownToggle\n          color=\"transparent\"\n          className=\"list-dropdown-toggle\"\n          data-toggle=\"modal\"\n        >\n          <BiDotsHorizontalRounded size={24} color=\"transparent\" />\n        </DropdownToggle>\n\n        <DropdownMenu className=\"list-dropdown-menu\" right={true}>\n          <DropdownItem onClick={removeList}>\n            <span>\n              <TiDeleteOutline size={24} />\n            </span>\n            Delete List\n          </DropdownItem>\n\n          <DropdownItem onClick={toggleEdit}>\n            <span>\n              <AiOutlineEdit size={24} />\n            </span>\n            Rename List\n          </DropdownItem>\n\n          <DropdownItem onClick={() => setEditModal(true)}>\n            <span>\n              <BsListCheck size={24} />\n            </span>\n            Edit List\n          </DropdownItem>\n        </DropdownMenu>\n      </ButtonDropdown>\n\n      {/* Note: modal body outside of dropdown so click isn't handled by\n       * dropdown */}\n      <EditListModal list={list} open={editModal} toggle={toggleEditModal} />\n    </>\n  );\n};\n\nexport default ListDropdown;\n","const moment = require('moment-timezone');\n\nexport const fmt = (n) => n.toFixed(2).toLocaleString('en');\n\nexport const fmtPrice = (price) =>\n  (!price && '—') || price < 0 ? '-$' + fmt(Math.abs(price)) : '$' + fmt(price);\n\nexport const fmtPercent = (price) => (price ? fmt(100 * price) + '%' : '—');\n\nexport const fmtClass = (val) => (val && val > 0 ? 'positive' : 'negative');\n\n// Time\nexport const isMarketOpen = () => {\n  const now = moment.tz('America/New_York');\n  const day = now.day();\n  const hour = now.hour();\n  if (day === 0 || day === 6) return false; // weekend\n  if (hour < 4 || hour > 20) return false; // extended hours\n  return true;\n};\n","import { fmtPercent, fmtPrice, fmtClass } from './util';\n\nexport const positiveChange = (quote) => quote && quote.changePercent > 0;\n\nexport const quotePercent = (quote, field = 'changePercent') =>\n  fmtPercent(quote && quote[field]);\n\nexport const quotePrice = (quote) => {\n  return fmtPrice(quote && quote.latestPrice);\n};\n\nexport const quoteClass = (quote) => fmtClass(quote && quote.changePercent);\n\nexport const prettyQuotePrice = (quote, field = 'latestPrice') => {\n  return fmtPrice(quote && quote[field]);\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { quotePercent, quotePrice, quoteClass } from '../../selectors/quotes';\n\nconst mapStateToProps = (state, { symbol }) => ({\n  quote: state.entities.quotes[symbol],\n});\n\nconst PercentChange = ({ quote }) => {\n  const cname = quoteClass(quote);\n  return <span className={cname}>{quotePercent(quote)}</span>;\n};\n\nconst ListCell = ({ symbol, quote }) => {\n  return (\n    <div className=\"list-item\">\n      <span>{symbol.toUpperCase()}</span>\n\n      <div className=\"list-chart-container\">--chart--</div>\n\n      <div className=\"quote-price\">\n        <span>{quotePrice(quote)}</span>\n        <div style={{ height: '2px' }} />\n        <PercentChange quote={quote} />\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(ListCell);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { IoIosArrowDown, IoIosArrowUp } from 'react-icons/io';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\n\nimport EditListForm from './forms/EditListForm';\nimport ListDropdown from './ListDropdown';\nimport ListCell from './ListCell';\nimport {\n  closeList,\n  openList,\n  updateList,\n  removeList,\n} from '../../actions/list_actions';\nimport { maybeFetchQuotes } from '../../actions/stock_actions';\n// import { getList } from '../../selectors/lists';\n\nconst mapStateToProps = (state, { list }) => {\n  // const list = getList(name, state.entities.lists);\n  return {\n    open: Boolean(state.ui.lists[list.name]),\n    // items: (list && list.items) || [],\n    quotes: state.entities.quotes,\n    apiKey: state.settings.keys['iex'],\n  };\n};\n\nconst mapDispatchToProps = (dispatch, { list: { name } }) => ({\n  closeList: () => dispatch(closeList(name)),\n  openList: () => dispatch(openList(name)),\n  maybeFetchQuotes: (symbols, quotes, params, apiKey) => {\n    return dispatch(maybeFetchQuotes(symbols, quotes, params, apiKey));\n  },\n  updateList: (items) => dispatch(updateList({ name, items })),\n  removeList: () => dispatch(removeList(name)),\n});\n\nconst SortableItem = SortableElement(({ symbol }) => (\n  <ListCell symbol={symbol} />\n));\n\nconst SortableList = SortableContainer(({ items }) => {\n  return (\n    <div>\n      {items.map((symbol, idx) => (\n        <SortableItem symbol={symbol} key={`item-${symbol}`} index={idx} />\n      ))}\n    </div>\n  );\n});\n\nconst List = ({\n  list,\n  handle,\n  quotes,\n  open,\n  openList,\n  closeList,\n  updateList,\n  maybeFetchQuotes,\n  removeList,\n  apiKey,\n  validate,\n}) => {\n  const { name, items } = list;\n\n  React.useEffect(() => {\n    // FIXME: when multiple lists are open, concurrent fetches can be\n    // made for the same symbols (only a problem on initial load?)\n    if (apiKey && open) maybeFetchQuotes(items, quotes, {}, apiKey);\n  }, []);\n\n  const [editing, setEditing] = React.useState(false);\n\n  if (!apiKey) {\n    // FIXME: handle missing key- link to input\n    console.warn('Must have iex API key to access quote data!');\n  }\n\n  const caret = (\n    <span className=\"list-caret\">\n      {!open ? <IoIosArrowUp size={24} /> : <IoIosArrowDown size={24} />}\n    </span>\n  );\n\n  const toggleList = () => {\n    if (open) closeList();\n    else {\n      apiKey && maybeFetchQuotes(items, quotes, {}, apiKey);\n      openList();\n    }\n  };\n\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    updateList(arrayMove(items, oldIndex, newIndex));\n  };\n\n  if (!list) return null;\n  return (\n    <React.Fragment key={name}>\n      <div className=\"list-item list-header-cell\">\n        <div className=\"list-title\">\n          {handle}\n          {editing ? (\n            <EditListForm\n              name={name}\n              validate={validate}\n              setEditing={setEditing}\n            />\n          ) : (\n            <span>{name}</span>\n          )}\n        </div>\n\n        <div className=\"list-controls\">\n          <ListDropdown\n            list={list}\n            removeList={removeList}\n            toggleEdit={() => setEditing(true)}\n          />\n          <div onClick={toggleList}>{caret}</div>\n        </div>\n      </div>\n\n      {open && <SortableList items={items} onSortEnd={onSortEnd} />}\n    </React.Fragment>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n","import React from 'react';\nimport { AiOutlineClose, AiOutlineSend } from 'react-icons/ai';\nimport { ImArrowRight } from 'react-icons/im';\n\nimport './list-form.scss';\n\nexport const ListForm = ({ listName, action, cancel, errors }) => {\n  const [name, setName] = React.useState(listName || '');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    action(name);\n    setName('');\n  };\n\n  const renderErrors = () => {\n    return (\n      <ul className=\"errors\">\n        {errors && errors.map((error, idx) => <li key={idx}>{error}</li>)}\n      </ul>\n    );\n  };\n\n  return (\n    <div className=\"list-form-container\">\n      <form onSubmit={(e) => handleSubmit(e)} className=\"list-form\">\n        <input\n          type=\"text\"\n          className=\"list-input\"\n          value={name}\n          placeholder=\"List Name\"\n          onChange={(e) => setName(e.currentTarget.value)}\n          autoFocus\n        />\n\n        <div className=\"list-form-controls\">\n          <button type=\"submit\">\n            <ImArrowRight size={18} color=\"var(--st__semantic-success-base)\" />\n          </button>\n          <button type=\"button\" onClick={cancel}>\n            <AiOutlineClose size={18} color=\"var(--st__semantic-error-base)\" />\n          </button>\n        </div>\n      </form>\n\n      {renderErrors()}\n    </div>\n  );\n};\n\nexport default ListForm;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AiOutlinePlus } from 'react-icons/ai';\nimport { GiHamburgerMenu } from 'react-icons/gi';\nimport {\n  SortableHandle,\n  SortableContainer,\n  SortableElement,\n} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\n\nimport List from './List';\nimport NewListForm from './forms/ListForm';\nimport {\n  createList,\n  receiveLists,\n  validateList,\n  receiveListErrors,\n} from '../../actions/list_actions';\nimport './lists.scss';\n\nconst mapStateToProps = (state, _ownProps) => ({\n  lists: state.entities.lists,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  createList: (name) => dispatch(createList(name)),\n  updateLists: (lists) => dispatch(receiveLists(lists)),\n  validateList: (newList, lists) => {\n    let errors = validateList(newList, lists);\n    if (errors.length) {\n      dispatch(receiveListErrors(errors));\n      return false;\n    }\n    return true;\n  },\n});\n\nconst DragHandle = SortableHandle(() => (\n  <span className=\"drag-burger\">\n    <GiHamburgerMenu size={24} color=\"var(--st__neutral-fg2)\" />\n  </span>\n));\n\nconst SortableItem = SortableElement(({ list, validate }) => (\n  <List list={list} handle={<DragHandle />} validate={validate} />\n));\n\nconst SortableList = SortableContainer(({ lists, validate }) => {\n  return (\n    <div>\n      {lists.map((list, idx) => (\n        <SortableItem\n          key={`list-item-${list.name}`}\n          index={idx}\n          list={list}\n          validate={validate}\n        />\n      ))}\n    </div>\n  );\n});\n\nconst Lists = ({ lists, createList, updateLists, validateList }) => {\n  const [formOpen, setFormOpen] = React.useState(false);\n\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    updateLists(arrayMove(lists, oldIndex, newIndex));\n  };\n\n  const validate = (newList) => validateList(newList, lists);\n\n  return (\n    <>\n      <div className=\"lists\">\n        <header>\n          <div>\n            <h4>WatchLists</h4>\n          </div>\n          <div onClick={() => setFormOpen((formOpen) => !formOpen)}>\n            <AiOutlinePlus\n              size={24}\n              color=\"var(--st__neutral-fg2)\"\n              className=\"new-list-icon\"\n            />\n          </div>\n        </header>\n\n        {formOpen && (\n          <NewListForm\n            listName=\"\"\n            action={createList}\n            cancel={() => setFormOpen(false)}\n          />\n        )}\n\n        <SortableList\n          lists={lists}\n          validate={validate}\n          onSortEnd={onSortEnd}\n          useDragHandle\n        />\n      </div>\n    </>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Lists);\n","import React from 'react';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { Container, Row } from 'reactstrap';\n\nimport './app.scss';\nimport Search from './search/Search';\nimport SearchMenu from './search/SearchMenu';\nimport Lists from './lists/Lists';\nconst Wrapper = process.env.REACT_APP_STANDALONE\n  ? require('./StandAlone').default\n  : null;\n\nconst App = () => {\n  const panel = (\n    <>\n      <Row>\n        <section className=\"search-section\">\n          <header>\n            <Search />\n\n            <div className=\"cancel-button\">\n              <AiOutlineClose\n                size={24}\n                className=\"cancel-button-icon\"\n                color=\"gray\"\n              />\n            </div>\n          </header>\n\n          <SearchMenu />\n        </section>\n      </Row>\n\n      <Row>{/* <h3>Stock charttt</h3> */}</Row>\n\n      <Row>\n        <section className=\"lists-section\">\n          <Lists />\n        </section>\n      </Row>\n    </>\n  );\n\n  return (\n    <Container fluid>\n      {process.env.REACT_APP_STANDALONE ? <Wrapper>{panel}</Wrapper> : panel}\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { loadSettings } from './util/settings';\nimport configureStore from './store/store';\n\nimport App from './components/App';\nimport './index.scss';\n\n// BEGIN testing\nimport * as search from './actions/search_actions';\nimport * as list from './actions/list_actions';\nimport * as stocks from './actions/stock_actions';\n// import _ from 'lodash';\n// import moment from 'moment-timezone';\n// END testing\n\nvar chrome;\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  let preloadedState = {};\n\n  // loading from chrome storage will trigger reducers instead\n  if (!(chrome && chrome.storage)) {\n    preloadedState = {\n      ...preloadedState,\n      entities: {\n        // stocks: JSON.parse(localStorage.getItem('stocks')) || {},\n        lists: JSON.parse(localStorage.getItem('lists')) || [],\n      },\n      settings: {\n        keys: JSON.parse(localStorage.getItem('keys')) || {},\n      },\n      ui: JSON.parse(localStorage.getItem('ui')) || {},\n    };\n  }\n\n  // TODO: if chrome extension, sync settings after store has been\n  // initialized\n  const store = configureStore(preloadedState);\n  const root = document.getElementById('root');\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Provider>,\n    root\n  );\n\n  if (process.env.REACT_APP_STANDALONE) {\n    document.getElementsByTagName('body')[0].className += 'standalone';\n  } else {\n    document.getElementsByTagName('body')[0].className += 'chrome-extension';\n  }\n\n  // BEGIN testing\n  window.store = store;\n  window.search = search;\n  window.list = list;\n  window.stocks = stocks;\n  window.loadSettings = loadSettings;\n  // window._ = _;\n  // window.moment = moment;\n  // END testing\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// import reportWebVitals from './reportWebVitals';\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"standalone_body__20-Hp\",\"panel\":\"standalone_panel__3-ksf\"};"],"sourceRoot":""}